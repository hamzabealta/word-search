version: '3.9'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # Disable security to allow HTTP
      - xpack.security.http.ssl.enabled=false  # Disable SSL on HTTP layer
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "ELASTIC_PASSWORD=testpassword"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  data_import:
    build:
      context: ./data_import
    volumes:
      - ./data:/app/data
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    deploy:
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "echo", "Data import service is running"]
      interval: 30s
      timeout: 10s
      retries: 3

  api_server:
    build:
      context: ./api_server  # Folder containing Dockerfile for api_server service
    ports:
      - "5034:5034"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTIC_USER=elastic
      - ELASTIC_PASSWORD=testpassword
      - HOST=0.0.0.0
      - PORT=5034
    depends_on:
      - elasticsearch
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5034 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  react_client:
    build:
      context: ./react_client 
    ports:
      - "3011:3011"
    environment:
      - REACT_APP_API_URL=http://localhost:5034 
    depends_on:
      - api_server
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3011"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  esdata:
